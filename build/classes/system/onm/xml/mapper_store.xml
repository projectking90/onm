<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper 태그 선언 -->
<mapper namespace="system.onm.dao.StoreDAO">
	<select id="getMenuList" parameterType="system.onm.dto.MenuSearchDTO" resultType="system.onm.dto.MenuDTO">
		select
			m.m_no	"m_no"
			,(select a.ma_name from code_menu_alpha a where a.ma_code=m.ma_code)	"ma_code"
			,(select b.mb_name from code_menu_beta b where b.mb_code=m.mb_code)		"mb_code"
			,(select s.s_name from store s where s.s_no=m.s_no)		"s_no"
			,m.m_name	"m_name"
			,m.price	"price"
			,m.m_comment		"m_comment"
			,to_char(m.reg_date,'YYYY-MM-DD') "reg_date"
			,m.is_del			as "is_del"
		from menu m
		where 1=1
	</select>
	
	<select id="getMenuDTO" parameterType="int" resultType="system.onm.dto.MenuDTO">
		select
			m.m_no	"m_no"
			,(select a.ma_name from code_menu_alpha a where a.ma_code=m.ma_code)	"ma_code"
			,(select b.mb_name from code_menu_beta b where b.mb_code=m.mb_code)		"mb_code"
			,(select s.s_name from store s where s.s_no=m.s_no)		"s_no"
			,m.m_name	"m_name"
			,m.price	"price"
			,m.m_comment		"m_comment"
			,to_char(m.reg_date,'YYYY-MM-DD') "reg_date"
			,m.is_del			as "is_del"
		from menu m
		where m.m_no=#{m_no}
	</select>
	
	<update id="updateStoreMenu" parameterType="system.onm.dto.MenuDTO">
		update menu 
		set 
			ma_code=(select a.ma_code from code_menu_alpha a where a.ma_name=#{ma_code})
			,mb_code=(select b.mb_code from code_menu_beta b where b.mb_name=#{mb_code})
			,m_name=#{m_name}
			,price=#{price}
			,m_comment=#{m_comment}
		where m_no=#{m_no}
	</update>
		<!-- 메뉴대분류의 목록을 검색하는 select 태그 -->
	<select id='getCodeMenuAlpha' resultType="system.onm.dto.CodeMenuAlphaDTO">
		select
			ma_name	"ma_name"
		from
			code_menu_alpha
	</select>
	
	<!-- 메뉴소분류의 목록을 검색하는 select 태그 -->
	<select id='getCodeMenuBeta' resultType="system.onm.dto.CodeMenuBetaDTO">
		select
			mb_name	"mb_name"
		from
			code_menu_beta
	</select>
	
	<update id="deleteStoreMenu" parameterType="system.onm.dto.MenuDTO">
		update menu 
		set 
			is_del='T'
		where m_no=#{m_no}
	</update>

<!-- 
	<sql id="ingredientWhere">
	
		<if test="keyword1!=null and keyword1.length()>0" >
			(
				upper(i_name) like upper('%${keyword1}%')
				or upper(i_size) like upper('%${keyword1}%')
				or upper(price) like upper('%${keyword1}%')
				or upper(to_char(reg_date,'YYYY-MM-DD AM HH:MI:SS')) like upper('%${keyword1}%')
				or upper(i_comment) like upper('%${keyword1}%')	
			)
		</if>
	
	</sql>

 -->

	<select id="getIngredientList" parameterType="system.onm.dto.IngredientSearchDTO" resultType="system.onm.dto.IngredientDTO">

			select
				i_no||'' 		as "i_no"
				,ia_code 		as "ia_code"
				,ib_code 		as "ib_code"
				,io_code	 	as "io_code"
				,s_no 			as "s_no"
				,num 			as "num"
				,i_name 		as "i_name"
				,i_size 		as "i_size"
				,price		 	as "price"
				,i_comment		as "i_comment"
				,to_char(reg_date,'YYYY-MM-DD') "reg_date" 
				,is_del			as "is_del"
			from ingredient

	</select>

	<insert id='insertStoreIngredient' parameterType="system.onm.dto.IngredientDTO">
		insert into ingredient( 
			 i_no        <!-- 식자재 번호 -->
		    ,ia_code     <!-- 대분류 코드 -->
		    ,ib_code     <!-- 소분류 코드 -->
		    ,io_code     <!-- 원산지 코드 -->
		    ,s_no        <!-- 가게 번호 -->
		    ,num         <!-- 상품코드 -->
		    ,i_name      <!-- 상품명 -->
		    ,i_size      <!-- 규격 -->
		    ,price       <!-- 매입가격 -->
		    ,i_comment   <!-- 설명 -->
		  <!--   ,reg_date    등록일 -->
		  <!--   ,is_del      삭제여부 -->
		)values (
			(select nvl(max(i_no),0)+1 from ingredient)
			,#{ia_code}
			,#{ib_code}
			,#{io_code}
			,#{s_no}
			,#{num}
			,#{i_name}
			,#{i_size}
			,#{price}
			,#{i_comment}
			<!-- ,sysdate -->
			<!-- ,#{is_del} -->
		)
	</insert>
</mapper>